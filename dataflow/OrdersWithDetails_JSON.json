{
	"name": "OrdersWithDetails_JSON",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "orderdetails",
						"type": "DatasetReference"
					},
					"name": "SourceOrderDetails"
				},
				{
					"dataset": {
						"referenceName": "SalesHeader",
						"type": "DatasetReference"
					},
					"name": "SourceOrderHeader"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "OrderAndDetail_Cosmos",
						"type": "DatasetReference"
					},
					"name": "SinktoCosmosDB"
				}
			],
			"transformations": [
				{
					"name": "ColumnScrubber"
				},
				{
					"name": "JoinIt"
				},
				{
					"name": "ValueScrubber"
				},
				{
					"name": "CreateArrays"
				},
				{
					"name": "MakeStruct"
				},
				{
					"name": "Typecast"
				}
			],
			"script": "source(output(\n\t\tOrderDetailId as integer,\n\t\tOrderId as integer,\n\t\tEmail as string,\n\t\tProductId as integer,\n\t\tQuantity as integer,\n\t\tUnitPrice as decimal(18,2)\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tquery: 'select * from orderdetails',\n\tformat: 'query') ~> SourceOrderDetails\nsource(output(\n\t\tOrderId as integer,\n\t\tOrderDate as timestamp,\n\t\tFirstName as string,\n\t\tLastName as string,\n\t\tAddress as string,\n\t\tCity as string,\n\t\tState as string,\n\t\tPostalCode as string,\n\t\tCountry as string,\n\t\tPhone as string,\n\t\tSMSOptIn as boolean,\n\t\tSMSStatus as string,\n\t\tEmail as string,\n\t\tReceiptUrl as string,\n\t\tTotal as decimal(18,2),\n\t\tPaymentTransactionId as string,\n\t\tHasBeenShipped as boolean\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tquery: 'select * from orders',\n\tformat: 'query') ~> SourceOrderHeader\nJoinIt select(mapColumn(\n\t\tOrderId = SourceOrderHeader@OrderId,\n\t\tOrderDate,\n\t\tFirstName,\n\t\tLastName,\n\t\tAddress,\n\t\tCity,\n\t\tState,\n\t\tPostalCode,\n\t\tCountry,\n\t\tPhone,\n\t\tSMSOptIn,\n\t\tSMSStatus,\n\t\tEmail = SourceOrderHeader@Email,\n\t\tReceiptUrl,\n\t\tTotal,\n\t\tPaymentTransactionId,\n\t\tHasBeenShipped,\n\t\tProductId,\n\t\tQuantity,\n\t\tUnitPrice,\n\t\torderdetailsstruct\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> ColumnScrubber\nSourceOrderHeader, MakeStruct join(SourceOrderHeader@OrderId == SourceOrderDetails@OrderId,\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> JoinIt\nColumnScrubber derive(Total = toDouble(round(Total,2))) ~> ValueScrubber\nValueScrubber aggregate(groupBy(orderID = OrderId),\n\tdetails = collect(orderdetailsstruct),\n\t\teach(match(instr(name,'OrderQty')==0&&instr(name,'UnitPrice')==0&&instr(name,'SalesOrderID')==0), $$ = first($$))) ~> CreateArrays\nTypecast derive(orderdetailsstruct = @(orderqty=Quantity,\n\t\tunitcost=UnitPrice,\n\t\tsalesorderdetailid=OrderDetailId,\n\t\tproductId=ProductId)) ~> MakeStruct\nSourceOrderDetails derive(UnitPrice = toDouble(round(UnitPrice,2))) ~> Typecast\nCreateArrays sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\trecreate:true,\n\tformat: 'document',\n\tpartitionKey: ['/SalesOrderID'],\n\tthroughput: 2000,\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tmapColumn(\n\t\tOrderHeaderId = orderID,\n\t\tdetails,\n\t\tOrderId,\n\t\tOrderDate,\n\t\tFirstName,\n\t\tLastName,\n\t\tAddress,\n\t\tCity,\n\t\tState,\n\t\tPostalCode,\n\t\tCountry,\n\t\tPhone,\n\t\tSMSOptIn,\n\t\tSMSStatus,\n\t\tEmail,\n\t\tReceiptUrl,\n\t\tTotal,\n\t\tPaymentTransactionId,\n\t\tHasBeenShipped,\n\t\tProductId,\n\t\tQuantity,\n\t\torderdetailsstruct\n\t),\n\tpartitionBy('hash', 1)) ~> SinktoCosmosDB"
		}
	}
}